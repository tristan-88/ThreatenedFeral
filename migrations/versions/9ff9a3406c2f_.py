"""empty message

Revision ID: 9ff9a3406c2f
Revises: 
Create Date: 2021-05-14 20:20:09.863401

"""
from alembic import op
import sqlalchemy as sa

import os
environment = os.getenv("FLASK_ENV")
SCHEMA = os.environ.get('SCHEMA')


# revision identifiers, used by Alembic.
revision = '9ff9a3406c2f'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('animals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('fact_1', sa.Text(), nullable=True),
    sa.Column('fact_2', sa.Text(), nullable=True),
    sa.Column('fact_3', sa.Text(), nullable=True),
    sa.Column('fact_4', sa.Text(), nullable=True),
    sa.Column('fact_5', sa.Text(), nullable=True),
    sa.Column('fact_6', sa.Text(), nullable=True),
    sa.Column('threats', sa.Text(), nullable=True),
    sa.Column('call_cry', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    
    if environment == "production":
        op.execute(f"ALTER TABLE animals SET SCHEMA {SCHEMA};")
        
    op.create_table('educators',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('educator_name', sa.String(length=100), nullable=False),
    sa.Column('content_link', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    if environment == "production":
        op.execute(f"ALTER TABLE educators SET SCHEMA {SCHEMA};")
        
    op.create_table('locations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('lng', sa.Float(), nullable=False),
    sa.Column('lat', sa.Float(), nullable=False),
    sa.Column('location_name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    if environment == "production":
        op.execute(f"ALTER TABLE locations SET SCHEMA {SCHEMA};")
        
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=40), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('address', sa.String(), nullable=False),
    sa.Column('city', sa.String(), nullable=False),
    sa.Column('state', sa.String(), nullable=False),
    sa.Column('zipcode', sa.Integer(), nullable=False),
    sa.Column('avatar_url', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    if environment == "production":
        op.execute(f"ALTER TABLE users SET SCHEMA {SCHEMA};")
        
    op.create_table('animal_educators',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('animal_id', sa.Integer(), nullable=True),
    sa.Column('educator_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['animal_id'], ['animals.id'], ),
    sa.ForeignKeyConstraint(['educator_id'], ['educators.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    if environment == "production":
        op.execute(f"ALTER TABLE animal_educators SET SCHEMA {SCHEMA};")
    
    op.create_table('animal_locations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('animal_id', sa.Integer(), nullable=True),
    sa.Column('location_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['animal_id'], ['animals.id'], ),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    if environment == "production":
        op.execute(f"ALTER TABLE animal_locations SET SCHEMA {SCHEMA};")
        
    op.create_table('comments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('animal_id', sa.Integer(), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['animal_id'], ['animals.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    if environment == "production":
        op.execute(f"ALTER TABLE comments SET SCHEMA {SCHEMA};")
        
    op.create_table('favorite_animal_lists',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('animal_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['animal_id'], ['animals.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    if environment == "production":
        op.execute(f"ALTER TABLE favorite_animal_lists SET SCHEMA {SCHEMA};")
        
    op.create_table('favorite_educator_list',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('educator_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['educator_id'], ['educators.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    if environment == "production":
        op.execute(f"ALTER TABLE favorite_educator_list SET SCHEMA {SCHEMA};")
        
    op.create_table('non_profit_orgs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('non_profit_name', sa.String(), nullable=True),
    sa.Column('non_profit_link', sa.String(), nullable=True),
    sa.Column('animal_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['animal_id'], ['animals.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    if environment == "production":
        op.execute(f"ALTER TABLE non_profit_orgs SET SCHEMA {SCHEMA};")
        
    op.create_table('photos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('photo_url', sa.String(), nullable=True),
    sa.Column('photo_description', sa.Text(), nullable=True),
    sa.Column('animal_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['animal_id'], ['animals.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    if environment == "production":
        op.execute(f"ALTER TABLE photos SET SCHEMA {SCHEMA};")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('photos')
    op.drop_table('non_profit_orgs')
    op.drop_table('favorite_educator_list')
    op.drop_table('favorite_animal_lists')
    op.drop_table('comments')
    op.drop_table('animal_locations')
    op.drop_table('animal_educators')
    op.drop_table('users')
    op.drop_table('locations')
    op.drop_table('educators')
    op.drop_table('animals')
    # ### end Alembic commands ###
